option(clangToolsExample "option for Example" OFF)
if (clangToolsExample OR "${Tools_Other_Project}" STREQUAL "ON")
    include_directories(
            .
            ${srcSourceHeader}
            ${LIBWEBSOCKETS_INCLUDE_DIRS}
    )


    FILE(GLOB ExampleSourceSrc "${CMAKE_CURRENT_LIST_DIR}/../Example/*.c*")

    option(ENABLE_I2C "option for I2C tool" OFF)
    if (ENABLE_I2C)
    else ()
        list(FILTER ExampleSourceSrc EXCLUDE REGEX ".*i2c\\.cpp")
    endif ()

    option(ENABLE_DLIB "option for dlib" OFF)
    if (ENABLE_DLIB)
    else ()
        list(FILTER ExampleSourceSrc EXCLUDE REGEX ".*dlib\\.cpp")
    endif ()

    option(ENABLE_OpenJPEG "option for OpenJPEG" OFF)
    if (ENABLE_OpenJPEG)
    else ()
        list(FILTER ExampleSourceSrc EXCLUDE REGEX ".*_OpenJpeg\\.cpp")
    endif ()

    option(ENABLE_SPI "option for SPI tool" OFF)
    if (ENABLE_SPI)
    else ()
        list(FILTER ExampleSourceSrc EXCLUDE REGEX ".*spi\\.cpp")
    endif ()
    list(FILTER ExampleSourceSrc EXCLUDE REGEX ".*win32\\.cpp")

    option(ENABLE_OPENCV "option for OPENCV tool" OFF)
    if (ENABLE_OPENCV)
        option(ENABLE_GTK3 "option for OPENCV tool" OFF)
        if (ENABLE_GTK3)
        else ()
            list(FILTER ExampleSourceSrc EXCLUDE REGEX ".*gtk3\\.cpp")
        endif ()
    else ()
        list(FILTER ExampleSourceSrc EXCLUDE REGEX ".*opencv.*\\.cpp")
        list(FILTER ExampleSourceSrc EXCLUDE REGEX ".*gtk3\\.cpp")
        list(FILTER ExampleSourceSrc EXCLUDE REGEX "chess_httpd_demo\\.cpp")
        list(FILTER ExampleSourceSrc EXCLUDE REGEX "chess_libevent_demo\\.cpp")
    endif ()
    option(ENABLE_LIBUSB1 "option for libusb-1.0 tool" OFF)
    if (ENABLE_LIBUSB1)
    else ()
        list(FILTER ExampleSourceSrc EXCLUDE REGEX ".*libusb.cpp")
    endif ()
    option(ENABLE_LIBEVENT "option for libevent tool" OFF)
    if (ENABLE_LIBEVENT)
    else ()
        list(FILTER ExampleSourceSrc EXCLUDE REGEX ".*libevent.*\\.cpp")
    endif ()
    option(ENABLE_NCURSES "option for NCURSES" OFF)
    if (ENABLE_NCURSES)
    else ()
        list(FILTER ExampleSourceSrc EXCLUDE REGEX ".*ncurses\\.cpp")
    endif ()
    option(ENABLE_FREETYPE "option for FREETYPE" OFF)
    if (ENABLE_FREETYPE)
    else ()
        list(FILTER ExampleSourceSrc EXCLUDE REGEX ".*_CvxFont\\.cpp")
        list(FILTER ExampleSourceSrc EXCLUDE REGEX ".*test_oled.cpp")
    endif ()
    option(ENABLE_OLED_TOOL "option for oled_tool tool" OFF)
    if (ENABLE_OLED_TOOL)
    else ()
        list(FILTER ExampleSourceSrc EXCLUDE REGEX ".*oled\\.cpp")
    endif ()
    if (UNIX)
    else ()
        list(FILTER ExampleSourceSrc EXCLUDE REGEX ".*Unix.*\\.cpp")
    endif ()

    option(ENABLE_FILENAME "option for FILENAME" ON)
    set(demo_name_list "")
    foreach (item ${ExampleSourceSrc})
        #获取当前文件的绝对路径
        get_filename_component(filepath "${item}" ABSOLUTE)
        if (NOT EXISTS ${filepath}/)
            string(REGEX REPLACE ".+Example/(.+)\\..*" "\\1" demo_name ${filepath})
            list(APPEND demo_name_list "${demo_name}\\;")
            add_executable(${demo_name} ${filepath})
            target_link_libraries(${demo_name} ${libTools_LIBRARIES} ${dl_LIBRARIES} ${OPENSSL_LIBRARIES}
                    ${LIBEVENT_LIBRARIES} ${libevent_LIBRARIES} ${LIBWEBSOCKETS_LIBRARIES}
                    ${OpenJPEG_LIBRARIES})
            if (ENABLE_FILENAME)
                redefine_file_macro(${demo_name})
            endif ()
            if (CURL_FOUND)
                target_link_libraries(${demo_name} ${CURL_LIBRARIES})
            endif ()
            install(TARGETS ${demo_name}
                    RUNTIME DESTINATION bin
                    LIBRARY DESTINATION bin)
        endif ()
    endforeach ()

    if (MSVC)
        FILE(GLOB ExampleWin32SourceSrc "${CMAKE_CURRENT_LIST_DIR}/../Example/*win32.cpp")
        foreach (item ${ExampleWin32SourceSrc})
            #获取当前文件的绝对路径
            get_filename_component(filepath "${item}" ABSOLUTE)
            if (NOT EXISTS ${filepath}/)
                string(REGEX REPLACE ".+Example/(.+)\\..*" "\\1" demo_name ${filepath})
                list(APPEND demo_name_list "${demo_name}\\;")
                add_executable(${demo_name} WIN32 ${filepath})
                target_link_libraries(${demo_name} ${libTools_LIBRARIES} ${dl_LIBRARIES} ${OPENSSL_LIBRARIES}
                        ${OpenJPEG_LIBRARIES})
                if (ENABLE_FILENAME)
                    redefine_file_macro(${demo_name})
                endif ()
                if (CURL_FOUND)
                    target_link_libraries(${demo_name} ${CURL_LIBRARIES})
                endif ()
                install(TARGETS ${demo_name}
                        RUNTIME DESTINATION bin
                        LIBRARY DESTINATION bin)
            endif ()
        endforeach ()
    endif ()

    function(JOIN VALUES GLUE OUTPUT)
        string(REPLACE ";" "${GLUE}" _TMP_STR "${VALUES}")
        set(${OUTPUT} "${_TMP_STR}" PARENT_SCOPE)
    endfunction()
    message(STATUS Example " : " ${demo_name_list})
    message(STATUS install " : " ${CMAKE_INSTALL_PREFIX})
endif ()
